// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vadiminshakov/committer/core/cohort/commitalgo (interfaces: StateStore)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/mock_commitalgo_state_store.go -package=mocks -mock_names=StateStore=MockCommitalgoStateStore . StateStore
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCommitalgoStateStore is a mock of StateStore interface.
type MockCommitalgoStateStore struct {
	ctrl     *gomock.Controller
	recorder *MockCommitalgoStateStoreMockRecorder
	isgomock struct{}
}

// MockCommitalgoStateStoreMockRecorder is the mock recorder for MockCommitalgoStateStore.
type MockCommitalgoStateStoreMockRecorder struct {
	mock *MockCommitalgoStateStore
}

// NewMockCommitalgoStateStore creates a new mock instance.
func NewMockCommitalgoStateStore(ctrl *gomock.Controller) *MockCommitalgoStateStore {
	mock := &MockCommitalgoStateStore{ctrl: ctrl}
	mock.recorder = &MockCommitalgoStateStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommitalgoStateStore) EXPECT() *MockCommitalgoStateStoreMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockCommitalgoStateStore) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockCommitalgoStateStoreMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockCommitalgoStateStore)(nil).Close))
}

// Put mocks base method.
func (m *MockCommitalgoStateStore) Put(key string, value []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockCommitalgoStateStoreMockRecorder) Put(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockCommitalgoStateStore)(nil).Put), key, value)
}
